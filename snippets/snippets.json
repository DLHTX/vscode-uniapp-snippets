{
    "uniapp-Base64转ArrayBuffer": {
        "prefix": "uni.base64ToArrayBuffer()",
        "body": [
            "uni.base64ToArrayBuffer(${1:base64})"
        ],
        "description": "uniapp-Base64转ArrayBuffer"
    },
    "uniapp-ArrayBuffer转Base64": {
        "prefix": "uni.arrayBufferToBase64()",
        "body": [
            "uni.arrayBufferToBase64(${1:arrayBuffer})"
        ],
        "description": "uniapp-ArrayBuffer转Base64"
    },
    "uniapp-发起网络请求": {
        "prefix": "uni.request()",
        "body": [
            "uni.request({",
            "\turl: 'https://www.example.com/request', //仅为示例，并非真实接口地址。",
            "\tdata: {",
            "\t\ttext: 'uni.request'",
            "\t},",
            "\theader: {",
            "\t\t'custom-header': 'hello' //自定义请求头信息",
            "\t},",
            "\tsuccess: (res) => {",
            "\t\tconsole.log(res.data);",
            "\t\tthis.text = 'request success';",
            "\t}",
            "});$0"
        ],
        "description": "uniapp-发起网络请求"
    },
    "uniapp-选择图片": {
        "prefix": "uni.chooseImage()",
        "body": [
            "uni.chooseImage({",
            "\tsuccess: (chooseImageRes) => {",
            "\t\tconst tempFilePaths = chooseImageRes.tempFilePaths;",
            "\t\tuni.uploadFile({",
            "\t\t\turl: 'https://www.example.com/upload', //仅为示例，非真实的接口地址",
            "\t\t\tfilePath: tempFilePaths[0],",
            "\t\t\tname: 'file',",
            "\t\t\tformData: {",
            "\t\t\t\t'user': 'test'",
            "\t\t\t},",
            "\t\t\tsuccess: (uploadFileRes) => {",
            "\t\t\t\tconsole.log(uploadFileRes.data);",
            "\t\t\t}",
            "\t\t});",
            "\t}",
            "});$0"
        ],
        "description": "uniapp-选择图片"
    },
    "uniapp-上传文件": {
        "prefix": "uni.uploadFile()",
        "body": [
            "uni.uploadFile({",
            "\turl: 'https://www.example.com/upload', //仅为示例，非真实的接口地址",
            "\tfilePath: tempFilePaths[0],",
            "\tname: 'file',",
            "\tformData: {",
            "\t\t'user': 'test'",
            "\t},",
            "\tsuccess: (uploadFileRes) => {",
            "\t\tconsole.log(uploadFileRes.data);",
            "\t}",
            "});$0"
        ],
        "description": "uniapp-上传文件"
    },
    "uniapp-下载文件": {
        "prefix": "uni.downloadFile()",
        "body": [
            "uni.downloadFile({",
            "\turl: 'https://www.example.com/file/test', //仅为示例，并非真实的资源",
            "\tsuccess: (res) => {",
            "\t\tif (res.statusCode === 200) {",
            "\t\t\tconsole.log('下载成功');",
            "\t\t}",
            "\t}",
            "});$0"
        ],
        "description": "uniapp-下载文件"
    },
    "uniapp-创建一个 WebSocket 连接": {
        "prefix": "uni.connectSocket()",
        "body": [
            "uni.downloadFile({",
            "\turl: 'https://www.example.com/file/test', //仅为示例，并非真实的资源",
            "\tsuccess: (res) => {",
            "\t\tif (res.statusCode === 200) {",
            "\t\t\tconsole.log('下载成功');",
            "\t\t}",
            "\t}",
            "});$0"
        ],
        "description": "uniapp-创建一个 WebSocket 连接"
    },
    "uniapp-创建一个 WebSocket 连接": {
        "prefix": "uni.connectSocket()",
        "body": [
            "uni.connectSocket({",
            "\turl: 'wss://www.example.com/socket',",
            "\tdata() {",
            "\t\treturn {",
            "\t\t\tx: '',",
            "\t\t\ty: ''",
            "\t\t};",
            "\t},",
            "\theader: {",
            "\t\t'content-type': 'application/json'",
            "\t},",
            "\tprotocols: ['protocol1'],",
            "\tmethod: 'GET'",
            "});$0"
        ],
        "description": "uniapp-创建一个 WebSocket 连接"
    },
    "uniapp-监听WebSocket连接打开事件": {
        "prefix": "uni.onSocketOpen()",
        "body": [
            "uni.onSocketOpen(function (res) {",
            "\tconsole.log('WebSocket连接已打开！');",
            "});$0"
        ],
        "description": "uniapp-监听WebSocket连接打开事件"
    },
    "uniapp-监听WebSocket错误": {
        "prefix": "uni.onSocketError()",
        "body": [
            "uni.onSocketError(function (res) {",
            "\tconsole.log('WebSocket连接已打开！');",
            "});$0"
        ],
        "description": "uniapp-监听WebSocket错误"
    },
    "uniapp-监听WebSocket接受到服务器的消息事件": {
        "prefix": "uni.onSocketMessage()",
        "body": [
            "uni.onSocketMessage(function (res) {",
            "\tconsole.log('收到服务器内容：' + res.data);",
            "});$0"
        ],
        "description": "uniapp-监听WebSocket接受到服务器的消息事件"
    },
    "uniapp-WebSocket发送数据": {
        "prefix": "uni.sendSocketMessage()",
        "body": [
            "uni.sendSocketMessage({",
            "\tdata: msg$0",
            "});"
        ],
        "description": "uniapp-WebSocket发送数据"
    },
    "uniapp-关闭 WebSocket 连接": {
        "prefix": "uni.closeSocket()",
        "body": [
            "uni.closeSocket()"
        ],
        "description": "uniapp-关闭 WebSocket 连接"
    },
    "uniapp-监听WebSocket关闭": {
        "prefix": "uni.onSocketClose()",
        "body": [
            "uni.onSocketClose(function (res) {",
                "\tconsole.log('WebSocket 已关闭！');",
            "});$0"
        ],
        "description": "uniapp-监听WebSocket关闭"
    },
    "uniapp-跳转到应用内的某个页面": {
        "prefix": "uni.navigateTo()",
        "body": [
            "uni.navigateTo({",
                "\turl: 'test?id=1&name=uniapp$0'",
            "});$0"
        ],
        "description": "uniapp-跳转到应用内的某个页面"
    },
    "uniapp-关闭当前页面跳转到应用内的某个页面": {
        "prefix": "uni.redirectTo()",
        "body": [
            "uni.redirectTo({",
                "\turl: 'test?id=1&name=uniapp$0'",
            "});$0"
        ],
        "description": "uniapp-关闭当前页面跳转到应用内的某个页面"
    },
    "uniapp-关闭所有页面，打开到应用内的某个页面": {
        "prefix": "uni.reLaunch()",
        "body": [
            "uni.reLaunch({",
                "\turl: 'test?id=1&name=uniapp$0'",
            "});$0"
        ],
        "description": "uniapp-关闭所有页面，打开到应用内的某个页面"
    },
    "uniapp-跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面": {
        "prefix": "uni.switchTab()",
        "body": [
            "uni.switchTab({",
                "\turl: '/pages/index/index$0'",
            "});$0"
        ],
        "description": "uniapp-跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面"
    },
    "uniapp-关闭当前页面，返回上一页面或多级页面": {
        "prefix": "uni.navigateBack()",
        "body": [
            "uni.navigateBack({",
                "\tdelta: 2$0",
            "});"
        ],
        "description": "uniapp-关闭当前页面，返回上一页面或多级页面"
    },
    "uniapp-关闭当前页面，返回上一页面或多级页面": {
        "prefix": "uni.navigateBack()",
        "body": [
            "uni.navigateBack({",
                "\tdelta: 2$0",
            "});"
        ],
        "description": "uniapp-关闭当前页面，返回上一页面或多级页面"
    },
    "uniapp-将数据存储在本地缓存中指定的 key 中,异步接口": {
        "prefix": "uni.setStorage()",
        "body": [
            "uni.setStorage({",
                "\tkey: 'storage_key',",
                "\tdata: 'hello',",
                "\tsuccess: function () {",
                    "\t\tconsole.log('success')$0;",
                "\t}",
            "});"
        ],
        "description": "uniapp-将数据存储在本地缓存中指定的 key 中"
    },
    "uniapp-将 data 存储在本地缓存中指定的 key 中,同步接口": {
        "prefix": "uni.setStorageSync()",
        "body": [
            "uni.setStorageSync('$0storage_key', '$1hello')"
        ],
        "description": "uniapp-将 data 存储在本地缓存中指定的 key 中"
    },
    "uniapp-从本地缓存中异步获取指定 key 对应的内容": {
        "prefix": "uni.getStorage()",
        "body": [
            "uni.getStorage({",
                "\tkey: 'storage_key',",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log(res.data)$0;",
                "\t}",
            "});"
        ],
        "description": "uniapp-从本地缓存中异步获取指定 key 对应的内容"
    },
    "uniapp-从本地缓存中同步获取指定 key 对应的内容": {
        "prefix": "uni.getStorageSync()",
        "body": [
            "uni.getStorageSync('storage_key$0')"
        ],
        "description": "uniapp-从本地缓存中同步获取指定 key 对应的内容"
    },
    "uniapp-异步获取当前 storage 的相关信息": {
        "prefix": "uni.getStorageInfo()",
        "body": [
            "uni.getStorageInfo({",
                "\tsuccess: function (res) {",
                    "\tconsole.log(res.keys);",
                    "\tconsole.log(res.currentSize);",
                    "\tconsole.log(res.limitSize);",
                "\t}",
            "});"
        ],
        "description": "uniapp-异步获取当前 storage 的相关信息"
    },
    "uniapp-同步获取当前 storage 的相关信息": {
        "prefix": "uni.getStorageInfoSync()",
        "body": [
            "uni.getStorageInfoSync()"
        ],
        "description": "uniapp-同步获取当前 storage 的相关信息"
    },
    "uniapp-从本地缓存中异步移除指定 key": {
        "prefix": "uni.removeStorage()",
        "body": [
            "uni.removeStorage({",
                "\tkey: 'storage_key',",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log('success');",
                "\t}",
            "});$0"
        ],
        "description": "uniapp-从本地缓存中异步移除指定 key"
    },
    "uniapp-从本地缓存中同步移除指定 key。": {
        "prefix": "uni.removeStorageSync()",
        "body": [
            "uni.removeStorageSync('storage_key');"
        ],
        "description": "uniapp-从本地缓存中同步移除指定 key。"
    },
    "uniapp-清理本地数据缓存": {
        "prefix": "uni.clearStorage()",
        "body": [
            "uni.clearStorage();"
        ],
        "description": "uniapp-清理本地数据缓存"
    },
    "uniapp-同步清理本地数据缓存": {
        "prefix": "uni.clearStorage()",
        "body": [
            "uni.clearStorage();"
        ],
        "description": "uniapp-同步清理本地数据缓存"
    },
    "uniapp-获取当前的地理位置": {
        "prefix": "uni.getLocation()",
        "body": [
            "uni.getLocation({",
                "\ttype: 'wgs84',",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log('当前位置的经度：' + res.longitude);",
                    "\t\tconsole.log('当前位置的纬度：' + res.latitude);",
                "\t}",
            "});"
        ],
        "description": "uniapp-获取当前的地理位置"
    },
    "uniapp-打开地图选择位置": {
        "prefix": "uni.chooseLocation()",
        "body": [
            "uni.chooseLocation({",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log('位置名称：' + res.name);",
                    "\t\tconsole.log('详细地址：' + res.address);",
                    "\t\tconsole.log('纬度：' + res.latitude);",
                    "\t\tconsole.log('经度：' + res.longitude);",
                "\t}",
            "});"
        ],
        "description": "uniapp-打开地图选择位置"
    },
    "uniapp-使用应用内置地图查看位置": {
        "prefix": "uni.getLocation()",
        "body": [
            "uni.getLocation({",
                "\ttype: 'gcj02', //返回可以用于uni.openLocation的经纬度",
                "\tsuccess: function (res) {",
                    "\t\tconst latitude = res.latitude;",
                    "\t\tconst longitude = res.longitude;",
                    "\t\tuni.openLocation({",
                        "\t\t\tlatitude: latitude,",
                        "\t\t\tlongitude: longitude,",
                        "\t\t\tsuccess: function () {",
                            "\t\t\t\tconsole.log('success');",
                        "\t\t\t}",
                    "\t\t});",
                "\t}",
            "});"
        ],
        "description": "uniapp-使用应用内置地图查看位置"
    },
    "uniapp-预览图片": {
        "prefix": "uni.previewImage()",
        "body": [
            "uni.previewImage({",
                "\turls: res.tempFilePaths,",
                "\tlongPressActions: {",
                    "\t\titemList: ['发送给朋友', '保存图片', '收藏'],",
                    "\t\tsuccess: function(data) {",
                        "\t\t\tconsole.log('选中了第' + (data.tapIndex + 1) + '个按钮,第' + (data.index + 1) + '张图片');",
                    "\t\t},",
                    "\t\tfail: function(err) {",
                        "\t\t\tconsole.log(err.errMsg);",
                    "\t\t}",
                "\t}",
            "});$0"
        ],
        "description": "uniapp-预览图片"
    },
    "uniapp-获取图片信息": {
        "prefix": "uni.getImageInfo()",
        "body": [
            "uni.getImageInfo({",
                "\tsrc: res.tempFilePaths[0],",
                "\tsuccess: function (image) {",
                    "\t\tconsole.log(image.width);",
                    "\t\tconsole.log(image.height);",
                "\t}",
            "});"
        ],
        "description": "uniapp-获取图片信息"
    },
    "uniapp-保存图片到系统相册": {
        "prefix": "uni.saveImageToPhotosAlbum()",
        "body": [
            "uni.saveImageToPhotosAlbum({",
                "\tfilePath: res.tempFilePaths[0],",
                "\tsuccess: function () {",
                    "\t\tconsole.log('save success');",
                "\t}",
            "});$0"
        ],
        "description": "uniapp-保存图片到系统相册"
    },
    "uniapp-压缩图片接口，可选压缩质量": {
        "prefix": "uni.compressImage()",
        "body": [
            "uni.compressImage({",
                "\tsrc: '/static/logo.jpg',",
                "\tquality: 80,",
                "\tsuccess: res => {",
                    "\t\tconsole.log(res.tempFilePath)",
                "\t}",
            "});"
        ],
        "description": "uniapp-压缩图片接口，可选压缩质量"
    },
    "uniapp-获取全局唯一的录音管理器 recorderManager": {
        "prefix": "uni.getRecorderManager()",
        "body": [
            "const recorderManager = uni.getRecorderManager();//其他详细请查看官方文档https://uniapp.dcloud.io/api/media/record-manager"
         
        ],
        "description": "uniapp-获取全局唯一的录音管理器 recorderManager"
    },
    "uniapp-获取全局唯一的背景音频管理器 backgroundAudioManager": {
        "prefix": "uni.getBackgroundAudioManager()",
        "body": [
            "uni.getBackgroundAudioManager();//其他详细请查看官方文档https://uniapp.dcloud.io/api/media/background-audio-manager$0"
        ],
        "description": "uniapp-获取全局唯一的背景音频管理器 backgroundAudioManager"
    },
    "uniapp-创建并返回内部 audio 上下文 innerAudioContext 对象": {
        "prefix": "uni.createInnerAudioContext()",
        "body": [
            "const innerAudioContext = uni.createInnerAudioContext();",
            "innerAudioContext.autoplay = true;",
            "innerAudioContext.src = 'https://img-cdn-qiniu.dcloud.net.cn/uniapp/audio/music.mp3';",
            "innerAudioContext.onPlay(() => {",
                "\tconsole.log('开始播放');",
            "});",
            "innerAudioContext.onError((res) => {",
                "\tconsole.log(res.errMsg);",
                "\tconsole.log(res.errCode);",
            "});$0"
        ],
        "description": "uniapp-创建并返回内部 audio 上下文 innerAudioContext 对象"
    },
    "uniapp-拍摄视频或从手机相册中选视频": {
        "prefix": "uni.chooseVideo()",
        "body": [
            "uni.chooseVideo({",
                "\tcount: 1,",
                "\tsourceType: ['camera', 'album'],",
                "\tsuccess: function (res) {",
                    "\t\tself.src = res.tempFilePath;",
                "\t}",
            "});$0"
        ],
        "description": "uniapp-拍摄视频或从手机相册中选视频"
    },
    "uniapp-保存视频到系统相册": {
        "prefix": "uni.saveVideoToPhotosAlbum()",
        "body": [
            "uni.saveVideoToPhotosAlbum({",
                "\tfilePath: res.tempFilePath,",
                "\tsuccess: function () {",
                    "\t\tconsole.log('save success');",
                "\t}",
            "});"
        ],
        "description": "uniapp-保存视频到系统相册"
    },
    "uniapp-创建并返回 video 上下文 videoContext 对象": {
        "prefix": "uni.createVideoContext(videoId, this)",
        "body": [
            "this.videoContext = uni.createVideoContext('myVideo')//更多请查找官方文档https://uniapp.dcloud.io/api/media/video-context"
        ],
        "description": "uniapp-创建并返回 video 上下文 videoContext 对象"
    },
    "uniapp-创建并返回 camera 组件的上下文 cameraContext 对象": {
        "prefix": "uni.createCameraContext()",
        "body": [
            "uni.createCameraContext()//更多请查找官方文档https://uniapp.dcloud.io/api/media/camera-context"
        ],
        "description": "uniapp-创建并返回 camera 组件的上下文 cameraContext 对象"
    },
    "uniapp-": {
        "prefix": "uni.createLivePlayerContext(livePlayerId, this)",
        "body": [
            "uni.createLivePlayerContext(livePlayerId, this)//更多请查找官方文档https://uniapp.dcloud.io/api/media/live-player-context?id=createliveplayercontext"
        ],
        "description": "uniapp-"
    },
    "uniapp-创建 live-pusher 上下文 livePusherContext 对象": {
        "prefix": "uni.createLivePusherContext(livePusherId, this)",
        "body": [
            "uni.createLivePusherContext(livePusherId, this)//更多请查找官方文档https://uniapp.dcloud.io/api/media/live-player-context?id=createliveplayercontext"
        ],
        "description": "uniapp-创建 live-pusher 上下文 livePusherContext 对象"
    },
    "uniapp-获取系统信息": {
        "prefix": "uni.getSystemInfo(OBJECT)",
        "body": [
            "uni.getSystemInfo({",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log(res.model);",
                    "\t\tconsole.log(res.pixelRatio);",
                    "\t\tconsole.log(res.windowWidth);",
                    "\t\tconsole.log(res.windowHeight);",
                    "\t\tconsole.log(res.language);",
                    "\t\tconsole.log(res.version);",
                    "\t\tconsole.log(res.platform);",
                "\t}",
            "});"
        ],
        "description": "uniapp-获取系统信息"
    },
    "uniapp-获取系统信息同步接口": {
        "prefix": "uni.getSystemInfoSync()",
        "body": [
            "const res = uni.getSystemInfoSync();",
            "console.log(res.model);",
            "console.log(res.pixelRatio);",
            "console.log(res.windowWidth);",
            "console.log(res.windowHeight);",
            "console.log(res.language);",
            "console.log(res.version);",
            "console.log(res.platform);"
        ],
        "description": "uniapp-获取系统信息同步接口"
    },
    "uniapp-判断应用的 API，回调，参数，组件等是否在当前版本可用": {
        "prefix": "uni.canIUse(String)",
        "body": [
            "uni.canIUse('getSystemInfoSync.return.screenWidth');",
            "uni.canIUse('getSystemInfo.success.screenWidth');",
            "uni.canIUse('showToast.object.image');",
            "uni.canIUse('request.object.method.GET');",
            "uni.canIUse('live-player');",
            "uni.canIUse('text.selectable');",
            "uni.canIUse('button.open-type.contact');"
        ],
        "description": "uniapp-判断应用的 API，回调，参数，组件等是否在当前版本可用"
    },
    "uniapp-监听内存不足告警事件": {
        "prefix": "uni.onMemoryWarning()",
        "body": [
            "uni.onMemoryWarning(function (){",
                "\tconsole.log('onMemoryWarningReceive')$0",
            "});"
        ],
        "description": "uniapp-监听内存不足告警事件"
    },
    "uniapp-获取网络类型": {
        "prefix": "uni.getNetworkType(OBJECT)",
        "body": [
            "uni.getNetworkType({",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log(res.networkType);$0",
                "\t}",
            "});"
        ],
        "description": "uniapp-获取网络类型"
    },
    "uniapp-监听网络状态变化": {
        "prefix": "uni.onNetworkStatusChange()",
        "body": [
            "uni.onNetworkStatusChange(function (res) {",
                "\tconsole.log(res.isConnected);",
                "\tconsole.log(res.networkType);$0",
            "});"
        ],
        "description": "uniapp-"
    },
    "uniapp-监听加速度数据": {
        "prefix": "uni.onAccelerometerChange(CALLBACK)",
        "body": [
            "uni.onAccelerometerChange(function (res) {",
                "\tconsole.log(res.x);",
                "\tconsole.log(res.y);",
                "\tconsole.log(res.z);",
            "});"
        ],
        "description": "uniapp-监听加速度数据"
    },
    "uniapp-开始监听加速度数据": {
        "prefix": "uni.startAccelerometer()",
        "body": [
            "uni.startAccelerometer();"
        ],
        "description": "uniapp-开始监听加速度数据"
    },
    "uniapp-停止监听加速度数据": {
        "prefix": "uni.stopAccelerometer()",
        "body": [
            "uni.stopAccelerometer();"
        ],
        "description": "uniapp-停止监听加速度数据"
    },
    "uniapp-监听罗盘数据": {
        "prefix": "uni.onCompassChange(CALLBACK)",
        "body": [
            "uni.onCompassChange(function (res) {",
                "\tconsole.log(res.direction);$0",
            "});//更多关于设备api请访问官方文档https://uniapp.dcloud.io/api/system/gyroscope?id=ongyroscopechange"
        ],
        "description": "uniapp-监听罗盘数据"
    },
    "uniapp-开始监听罗盘数据": {
        "prefix": "uni.startCompass(OBJECT)",
        "body": [
            "uni.startCompass()//更多关于设备api请访问官方文档https://uniapp.dcloud.io/api/system/gyroscope?id=ongyroscopechange"
        ],
        "description": "uniapp-开始监听罗盘数据"
    },
    "uniapp-停止监听罗盘数据": {
        "prefix": "uni.stopCompass()",
        "body": [
            "uni.stopCompass()//更多关于设备api请访问官方文档https://uniapp.dcloud.io/api/system/gyroscope?id=ongyroscopechange"
        ],
        "description": "uniapp-停止监听罗盘数据"
    },
    "uniapp-监听陀螺仪数据变化事件": {
        "prefix": "uni.onGyroscopeChange()",
        "body": [
            "uni.onGyroscopeChange(CALLBACK)//更多关于设备api请访问官方文档https://uniapp.dcloud.io/api/system/gyroscope?id=ongyroscopechange"
        ],
        "description": "uniapp-监听陀螺仪数据变化事件"
    },
    "uniapp-显示消息提示框": {
        "prefix": "uni.showToast()",
        "body": [
            "uni.showToast({",
                "\ttitle: '标题',",
                "\tduration: 2000",
            "});"
        ],
        "description": "uniapp-显示消息提示框"
    },
    "uniapp-隐藏消息提示框": {
        "prefix": "uni.hideToast()",
        "body": [
            "uni.hideToast();"
        ],
        "description": "uniapp-隐藏消息提示框"
    },
    "uniapp-显示 loading 提示框": {
        "prefix": "uni.showLoading()",
        "body": [
            "uni.showLoading({",
                "\ttitle: '加载中'$0",
            "});"
        ],
        "description": "uniapp-显示 loading 提示框"
    },
    "uniapp-隐藏 loading 提示框": {
        "prefix": "uni.hideLoading()",
        "body": [
            "uni.hideLoading();"
        ],
        "description": "uniapp-隐藏 loading 提示框"
    },
    "uniapp-显示模态弹窗": {
        "prefix": "uni.showModal()",
        "body": [
            "uni.showModal({",
                "\ttitle: '提示',",
                "\tcontent: '这是一个模态弹窗',",
                "\tsuccess: function (res) {",
                    "\t\tif (res.confirm) {",
                        "\t\t\tconsole.log('用户点击确定');",
                    "\t\t} else if (res.cancel) {",
                        "\t\t\tconsole.log('用户点击取消');",
                    "\t\t}",
                "\t}",
            "});"
        ],
        "description": "uniapp-显示模态弹窗"
    },
    "uniapp-​显示操作菜单": {
        "prefix": "uni.showActionSheet()",
        "body": [
            "uni.showActionSheet({",
                "\titemList: ['A', 'B', 'C'],",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log('选中了第' + (res.tapIndex + 1) + '个按钮');",
                "\t},",
                "\tfail: function (res) {",
                    "\t\tconsole.log(res.errMsg);",
                "\t}",
            "});"
        ],
        "description": "uniapp-​显示操作菜单"
    },
    "uniapp-动态设置当前页面的标题": {
        "prefix": "uni.setNavigationBarTitle()",
        "body": [
            "uni.setNavigationBarTitle({",
                "\ttitle: '新的标题'$0",
            "});"
        ],
        "description": "uniapp-动态设置当前页面的标题"
    },

    "uniapp-设置页面导航条颜色": {
        "prefix": "uni.setNavigationBarColor()",
        "body": [
            "uni.setNavigationBarColor({",
                "\tfrontColor: '#ffffff',",
                "\tbackgroundColor: '#ff0000',",
                "\tanimation: {",
                    "\t\tduration: 400,",
                    "\t\ttimingFunc: 'easeIn'",
                "\t}",
            "});$0"
        ],
        "description": "uniapp-设置页面导航条颜色"
    },
    "uniapp-在当前页面显示导航条加载动画": {
        "prefix": "uni.showNavigationBarLoading()",
        "body": [
            "uni.showNavigationBarLoading()"
        ],
        "description": "uniapp-在当前页面显示导航条加载动画"
    },
    "uniapp-在当前页面隐藏导航条加载动画": {
        "prefix": "uni.hideNavigationBarLoading()",
        "body": [
            "uni.hideNavigationBarLoading()"
        ],
        "description": "uniapp-在当前页面隐藏导航条加载动画"
    },
    "uniapp-动态设置 tabBar 某一项的内容": {
        "prefix": "uni.setTabBarItem()",
        "body": [
            "uni.setTabBarItem({",
                "\tindex: 0,",
                "\ttext: 'text',",
                "\ticonPath: '/path/to/iconPath',",
                "\tselectedIconPath: '/path/to/selectedIconPath'",
            "});"
        ],
        "description": "uniapp-动态设置 tabBar 某一项的内容"
    },
    "uniapp-动态设置 tabBar 的整体样式": {
        "prefix": "uni.setTabBarStyle()",
        "body": [
            "uni.setTabBarStyle({",
                "\tcolor: '#FF0000',",
                "\tselectedColor: '#00FF00',",
                "\tbackgroundColor: '#0000FF',",
                "\tborderStyle: 'white'",
            "});"
        ],
        "description": "uniapp-动态设置 tabBar 的整体样式"
    },
    "uniapp-隐藏 tabBar": {
        "prefix": "uni.hideTabBar()",
        "body": [
            "uni.hideTabBar()"
        ],
        "description": "uniapp-隐藏 tabBar"
    },
    "uniapp-显示 tabBar": {
        "prefix": "uni.showTabBar()",
        "body": [
            "uni.showTabBar()"
        ],
        "description": "uniapp-显示 tabBar"
    },
    "uniapp-为 tabBar 某一项的右上角添加文本": {
        "prefix": "uni.setTabBarBadge()",
        "body": [
            "uni.setTabBarBadge({",
                "index: 0,",
                "text: '1'",
            "});"
        ],
        "description": "uniapp-为 tabBar 某一项的右上角添加文本"
    },
    "uniapp-移除 tabBar 某一项右上角的文本": {
        "prefix": "uni.removeTabBarBadge()",
        "body": [
            "uni.removeTabBarBadge({",
                "index: 0,",
            "});"
        ],
        "description": "uniapp-移除 tabBar 某一项右上角的文本"
    },
    "uniapp-显示 tabBar 某一项的右上角的红点": {
        "prefix": "uni.showTabBarRedDot(OBJECT)",
        "body": [
            "uni.showTabBarRedDot({",
                "index: 0,",
            "});"
        ],
        "description": "uniapp-显示 tabBar 某一项的右上角的红点"
    },
    "uniapp-隐藏 tabBar 某一项的右上角的红点": {
        "prefix": "uni.hideTabBarRedDot(OBJECT)",
        "body": [
            "uni.hideTabBarRedDot({",
                "index: 0,",
            "});"
        ],
        "description": "uniapp-隐藏 tabBar 某一项的右上角的红点"
    },
    "uniapp-动态设置窗口的背景色": {
        "prefix": "uni.setBackgroundColor()",
        "body": [
            "uni.setBackgroundColor({",
                "\tbackgroundColor: '#ffffff'$0",
                "\backgroundColorTop: '#ffffff'",
                "\backgroundColorBottom: '#ffffff'",
            "});"
        ],
        "description": "uniapp-动态设置窗口的背景色"
    },
    "uniapp-动态设置下拉背景字体、loading 图的样式": {
        "prefix": "uni.setBackgroundTextStyle()",
        "body": [
            "uni.setBackgroundTextStyle({",
                "\ttextStyle: 'dark' // 下拉背景字体、loading 图的样式为dark$0",
            "});"
        ],
        "description": "uniapp-动态设置下拉背景字体、loading 图的样式"
    },
    "uniapp-创建一个动画实例 animation": {
        "prefix": "uni.createAnimation()",
        "body": [
            "var animation = uni.createAnimation({",
                "\ttransformOrigin: '50% 50%',",
                "\tduration: 1000,",
                "\ttimingFunction: 'ease',",
                "\tdelay: 0",
            "})//官方文档https://uniapp.dcloud.io/api/ui/animation?id=createanimation"
        ],
        "description": "uniapp-创建一个动画实例 animation"
    },
    "uniapp-将页面滚动到目标位置": {
        "prefix": "uni.pageScrollTo()",
        "body": [
            "uni.pageScrollTo({",
                "\tscrollTop: 0,",
                "\tduration: 300",
            "});"
        ],
        "description": "uniapp-将页面滚动到目标位置"
    },
    
    "uniapp-监听窗口尺寸变化事件": {
        "prefix": "uni.onWindowResize()",
        "body": [
            "uni.onWindowResize((res) => {",
                "\tconsole.log('变化后的窗口宽度=' + res.size.windowWidth)",
                "\tconsole.log('变化后的窗口高度=' + res.size.windowHeight)",
            "})"
        ],
        "description": "uniapp-监听窗口尺寸变化事件"
    },
    "uniapp-取消监听窗口尺寸变化事件": {
        "prefix": "uni.offWindowResize()",
        "body": [
            "uni.offWindowResize(() => {",
                "\tconsole.log('取消监听窗口尺寸变化事件')$0",
            "});"
        ],
        "description": "uniapp-取消监听窗口尺寸变化事件"
    },
    "uniapp-动态加载字体": {
        "prefix": "uni.loadFontFace()",
        "body": [
            "uni.loadFontFace({",
                "\tfamily: 'Bitstream Vera Serif Bold',",
                "\tsource: 'url()',",
                "\tsuccess() {",
                    "\t\tconsole.log('success')",
                "\t}",
            "});"
        ],
        "description": "uniapp-动态加载字体"
    },
    "uniapp-函数用于获取当前页面栈的实例": {
        "prefix": "getCurrentPages()",
        "body": [
            "getCurrentPages()//关于获取页面的官方文档https://uniapp.dcloud.io/api/window/window"
        ],
        "description": "uniapp-函数用于获取当前页面栈的实例"
    },
    "uniapp-保存文件到本地": {
        "prefix": "uni.saveFile()",
        "body": [
            "uni.saveFile({",
                "\ttempFilePath: tempFilePaths[0],",
                "\tsuccess: function (res) {",
                   "\t\tvar savedFilePath = res.savedFilePath;",
                "\t}",
            "});"
        ],
        "description": "uniapp-保存文件到本地"
    },
    "uniapp-获取本地已保存的文件列表": {
        "prefix": "uni.getSavedFileList()",
        "body": [
            "uni.getSavedFileList({",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log(res.fileList);",
                "\t}",
            "});"
        ],
        "description": "uniapp-获取本地已保存的文件列表"
    },
    "uniapp-获取本地文件的文件信息": {
        "prefix": "uni.getSavedFileInfo()",
        "body": [
            "uni.getSavedFileInfo({",
                "\tfilePath: 'unifile://somefile', //仅做示例用，非真正的文件路径",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log(res.size);",
                    "\t\tconsole.log(res.createTime);",
                "\t}",
            "});"
        ],
        "description": "uniapp-获取本地文件的文件信息"
    }, 
    "uniapp-删除本地存储的文件": {
        "prefix": "uni.removeSavedFile()",
        "body": [
            "uni.removeSavedFile({",
                "\tfilePath: res.fileList[0].filePath,",
                "\tcomplete: function (res) {",
                    "\t\tconsole.log(res);",
                "\t}",
            "});"
        ],
        "description": "uniapp-删除本地存储的文件"
    }, 
    "uniapp-获取文件信息": {
        "prefix": "uni.getFileInfo()",
        "body": [
            "uni.uni.getFileInfo({",
                "\tfilePath: res.fileList[0].filePath,",
            "});"
        ],
        "description": "uniapp-获取文件信息"
    }, 
    "uniapp-新开页面打开文档,支持格式：doc, xls, ppt, pdf, docx, xlsx, pptx。": {
        "prefix": "openDocument()",
        "body": [
            "openDocument({",
                "\tfilePath: filePath,",
                "\tsuccess: function (res) {",
                    "\t\tconsole.log('打开文档成功');",
                "\t})",
            "});"
        ],
        "description": "uniapp-新开页面打开文档"
    }
}